// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

// Prisma schema for CRM



datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      Role
  avatar    String?
  createdAt DateTime @default(now())
  password  String

  tasks    Task[]
}

enum Role {
  admin
  staff
  client
}

model Client {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String?
  address   String?
  company   String?
  notes     String?
  projects  Project[] // Relaci√≥n: un cliente tiene muchos proyectos
  createdAt DateTime @default(now())
  updatedAt DateTime?
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  clientId    String
  client      Client   @relation(fields: [clientId], references: [id])
  status      ProjectStatus
  priority    ProjectPriority
  startDate   DateTime
  endDate     DateTime?
  budget      Float?
  team        String[]
  progress    Int

  tasks       Task[]
}

model Task {
  id          String   @id @default(uuid())
  name        String
  description String?
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  statusId    String   // La tarea se relaciona con un 'TaskStatus' por su ID
  status      TaskStatus @relation(fields: [statusId], references: [id])
  priority    TaskPriority
  assigneeId  String?
  assignee    User?    @relation(fields: [assigneeId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime?
}

// Nuevo modelo para los estados de tarea
model TaskStatus {
  id         String   @id @default(uuid())
  name       String   @unique
  color      String?  // Opcional: puedes guardar un color para cada estado
  order      Int?     // Opcional: para ordenar los estados en la UI
  tasks      Task[]   // Un estado tiene muchas tareas
  createdAt  DateTime @default(now())
}

enum TaskPriority {
  low
  medium
  high
  urgent
}

enum ProjectStatus {
  active
  completed
  on_hold
}

enum ProjectPriority {
  low
  medium
  high
  urgent
}

